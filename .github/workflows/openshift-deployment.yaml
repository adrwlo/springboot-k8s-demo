name: OpenShift Deployment

on:
  push:
    branches:
      - openshift-deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Pobranie kodu
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Instalacja JDK
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Budowa aplikacji
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # 4. Logowanie do DockerHub
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 5. Budowa obrazu Dockera
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-k8s-demo:latest .

    # 6. Wys≈Çanie obrazu na DockerHub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-k8s-demo:latest

    # 7. Instalacja OpenShift CLI
    - name: Install OpenShift CLI
      run: |
        curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
        tar -xzf oc.tar.gz
        sudo mv oc /usr/local/bin/

    # 8. Logowanie do OpenShift
    - name: Login to OpenShift
      run: oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify=true

    # 9. Deployment lub aktualizacja
    - name: Deploy or Update App
      run: |
        oc project ${{ secrets.OPENSHIFT_PROJECT }}

        if oc get deployment springboot-k8s-demo >/dev/null 2>&1 || oc get dc springboot-k8s-demo >/dev/null 2>&1; then
          echo "‚úÖ Aplikacja ju≈º istnieje ‚Äì aktualizacja obrazu..."
          oc set image deployment/springboot-k8s-demo springboot-k8s-demo=${{ secrets.DOCKER_USERNAME }}/springboot-k8s-demo:latest || \
          oc set image dc/springboot-k8s-demo springboot-k8s-demo=${{ secrets.DOCKER_USERNAME }}/springboot-k8s-demo:latest
          oc rollout restart deployment/springboot-k8s-demo || \
          oc rollout restart dc/springboot-k8s-demo
        else
          echo "üöÄ Tworzenie aplikacji w OpenShift..."
          oc new-app docker.io/${{ secrets.DOCKER_USERNAME }}/springboot-k8s-demo:latest --name=springboot-k8s-demo
          oc expose deployment springboot-k8s-demo --port=8080
          oc expose svc/springboot-k8s-demo
        fi

    # 10. Pobranie URL aplikacji
    - name: Get Application URL
      run: |
        echo "üåç Publiczny adres aplikacji:"
        oc get route springboot-k8s-demo -o jsonpath='http://{.spec.host}{"\n"}'
